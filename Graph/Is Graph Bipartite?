class Solution {
    public boolean isBipartite(int[][] graph) {
        int n = graph.length, m = graph[0].length;
        Queue<Integer> q = new LinkedList<>();
        int[] color = new int[n];

        for (int i = 0; i < n; i++) {
            if (color[i] == 0) {
                q.add(i);
                color[i] = 1;
            }

            while (!q.isEmpty()) {
                int front = q.remove();

                for (int j = 0; j < graph[front].length; j++) {
                    int el = graph[front][j];

                    if(color[el] == 0){
                        q.add(el);
                        color[el] = color[front] == 1 ? 2 : 1;
                    }
                    else if(color[front] == color[el]) return false;
                }
            }
        }
        return true;
    }
}
